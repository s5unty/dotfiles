# vim:syntax=zsh:ft=zsh
alias -g G='| egrep -i --color=always'
alias -g M="| $__LESS"
alias -g Y="| gpaste"
alias -g H='ansifilter --html -eUTF8'

#alias **="$(fzf)"
alias ...="../../"
alias ....="../../../"
alias cs="history -i 0"
alias mv="/bin/mv -i"
alias ll="/bin/ls --color=always -hFxtrl"
alias la="/bin/ls --color=always -hFXA"
alias ls="/bin/ls --color=always -hFv"
alias cp="cp -a"
alias rm="rm -I"
alias at="at -m"
alias ow="$__SUDO chown -R `whoami`:`whoami`"
alias vin="vi --noplugin"
alias mkd="mkd2html -footer \"<hr /> Last updated: `date +"%F %T%:z"`\""
alias w3m="/usr/bin/w3m -no-graph"
alias diff="$__DIFF"
alias more="$__LESS"
alias tree="LANG=c tree -C"
alias grep="grep"
alias egrep="egrep --color=always"
alias scp="scp -p"
alias lintian="lintian -viI"
alias tig="tig --all"
alias sudo="/usr/bin/sudo -E"
alias anki="/usr/bin/anki -b ~/.anki"
alias rot13="tr a-zA-Z n-za-mN-ZA-M"
alias atf-run="env -i PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/atf/bin atf-run"
alias guanji="sudo systemctl poweroff"
alias chongqi="sudo systemctl reboot"
alias percol="percol --match-method=pinyin"
alias fs="ffsend upload -c"
alias puml="java -jar /opt/plantuml/plantuml.jar"
alias cnpm="npm --registry=https://registry.npm.taobao.org \
    --cache=$HOME/.npm/.cache/cnpm \
    --disturl=https://npm.taobao.org/dist \
    --userconfig=$HOME/.cnpmrc"
alias docker="sudo docker"

alias gll="git ll"
alias gls="git ls"
alias gst="git st"
alias gdi="git di"
alias gci="git ci"
alias gco="git co"
alias gup="git pull"
alias gpu="git push"

cd() {
    if [[ "$@" == "." ]]; then
        while true; do
            local lsd=$(echo ".." && /bin/ls -p | /bin/grep '/$' | /bin/sed 's;/$;;')
            local dir="$(printf '%s\n' "${lsd[@]}" |
                fzf --reverse --preview '
                    __cd_nxt="$(echo {})";
                    __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
                    echo $__cd_path;
                    echo;
                    ls -p --color=always "${__cd_path}";
            ')"
            [[ ${#dir} != 0 ]] || return 0
            builtin cd "$dir" &> /dev/null
        done
    fi

    if [[ "$#" != 0 ]]; then
        builtin cd "$@";
        ls;
        return
    fi
}

## 但是 sudo 会导致各种强大插件出现安全问题
#vi() {
#    # 使用 :w !sudo tee % 虽然可以写入，但是会缺少 undolist
#    precommand=
#    for i in "$@" ; do
#        if [ -f "$i" -a ! -w "$i" ] ; then precommand=$__SUDO ; break ; fi
#    done
#
#    ${precommand} /usr/bin/vim -n "$@"
#}

md() {
    /bin/mkdir $*
    cd $1
}

tcp() {
    tar cpf - ${(@)argv[1, -2]} | tar xvf - -C ${argv[-1]}
}

T() { # tail
    if [ -r $*[$#] ]; then
        tail $*
    else
        $__SUDO tail $*
    fi
}

K() { # kill
    killall -u $USER $1
}

P() { # ps
    ps aux | grep -v "grep" | grep -B2 "$1"
}

PP() { # printer preview
    paps --landscape --font="monospace 8" --header --columns=2 $1 | ps2pdf - - | zathura -
}

PPP() {
    paps --landscape --font="monospace 8" --header --columns=2 $1 | lp -o landscape -o sites=two-sided-long-edge
}

/() { # find
    find ./ -iname "*$1*" ${(@)argv[2,$#]}
}

R() { # find in files
    egrep -rin --color=always \
        --exclude="*.old" --exclude="*.bak" --exclude="*.BAK" --exclude="*.orig" \
        --exclude="*.rej" --exclude="*.a" --exclude="*.olb" --exclude="*.o" \
        --exclude="*.obj" --exclude="*.so" --exclude="*.exe" --exclude="*.gz" \
        --exclude="*.tar" --exclude="*.zip" --exclude="*.tgz" --exclude="*.bz2" \
        --exclude="*.deb" --exclude="*.jar" --exclude="*.cab" --exclude="*.tbz" \
        --exclude="*.jpg" --exclude="*.jpeg" --exclude="*.png" --exclude="*.gif" \
        --exclude="*.pdf" --exclude-dir=".cscope" --exclude-dir=".svn" --exclude-dir=".git" \
        "$*" .
}

CS() { # gen cscope.files
    mkdir -p .cscope
    find . -iname '*.java' > .cscope/cscope_java.files
    find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.cc' -o -iname '*.cxx' > .cscope/cscope_c.files
    find . -iname '*.h' -o -iname '*.hpp' -o -iname '*.hh' -o -iname '*.hxx' > .cscope/cscope_h.files
    cat .cscope/cscope_java.files .cscope/cscope_c.files .cscope/cscope_h.files > .cscope/cscope.files
    cscope -kbq -i.cscope/cscope.files -f.cscope/cscope.out
    ctags --c++-kinds=+p --fields=+iaS --extra=+q --tag-relative -L.cscope/cscope_java.files -f.cscope/cscope_java.tags
    ctags --c++-kinds=+p --fields=+iaS --extra=+q --tag-relative -L.cscope/cscope_c.files -f.cscope/cscope_c.tags
    ctags --c++-kinds=+p --fields=+iaS --extra=+q --tag-relative -L.cscope/cscope_h.files -f.cscope/cscope_h.tags
}

dup() { # dupload
    if echo "$1" | grep -q '\.changes$' ; then
        # dup *.changes
        /usr/bin/dupload $@
    else
        # dup 127 *.changes
        /usr/bin/dupload -t "$1" ${(@)argv[2,$#]}
    fi
}

piff() {
    $__DIFF --old-line-format='< %l
' --new-line-format='> %l
' --old-group-format='%df%(f=l?:,%dl)d%dE
%<' --new-group-format='%dea%dF%(F=L?:,%dL)
%>' --changed-group-format='%df%(f=l?:,%dl)c%dF%(F=L?:,%dL)
%<---
%>' --unchanged-group-format='' $*
}

# package {{{
DISTRO=`awk '/[a-zA-Z]/ { print $1; exit }' /etc/issue`
if [[ $DISTRO == "Debian" || $DISTRO == "Ubuntu" ]]; then
    alias api="$__SUDO apt-get install"
    alias apo="apt-get source"
    alias ape="vi /etc/apt/sources.list"
    alias apr="$__SUDO apt-get remove"
    alias apR="$__SUDO apt-get autoremove"
    alias apu="$__SUDO apt-get update"
    alias app="$__SUDO apt-get purge"
    alias apg="apt-cache search"
    alias aps="apt-cache show"
    alias apv="apt-cache policy"

    alias dpi="$__SUDO dpkg -i"
    alias dpp="$__SUDO dpkg -P"
    alias dpc="dpkg -c"
    alias dps="dpkg -I"
    alias dpo="dpkg -e"
    alias dpx="dpkg -x"
    alias dpg="dpkg -l | grep"
    alias dpG="dpkg -S"
    alias dpL="dpkg -L"
    dpH() { echo "$1 hold" | $__SUDO dpkg --set-selections }
    dpI() { echo "$1 install" | $__SUDO dpkg --set-selections }


    alias sl="$__SUDO tail -f /var/log/syslog"
elif [[ $DISTRO == "Fedora" || $DISTRO == "Red" ]]; then
    alias api="$__SUDO yum install"
    alias apa="$__SUDO yum clean all"
    alias apr="$__SUDO yum remove"
    alias apg="yum search"
    alias aps="yum info"

    alias dpi="$__SUDO rpm -iUfvh"
    alias dpI="$__SUDO rpm -iUfvh --replacefiles --replacepkgs --oldpackage"
    alias dpc="rpm -qpl"
    alias dps="rpm -qpi"
    alias dpo="rpm --scripts -qp"
    alias dpg="rpm -qa | grep"
    alias dpL="rpm -ql"
    alias dps="rpm -qi"
    alias dpr="$__SUDO rpm -e"
    alias dpp="$__SUDO rpm -e --nodeps --allmatches"

    alias sl="$__SUDO tail -f /var/log/messages"
fi
# }}}

# docker {{{
###################
# example:
#
# 16185% sudo docker search debian
# NAME                          DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
# ubuntu                        Ubuntu is a Debian-based Linux operating s...   2375      [OK]
# debian                        Debian is a Linux distribution that's comp...   771       [OK]
# google/debian                                                                 47                   [OK]
# visono/debian                 Docker base image of debian 7 with tools i...   0                    [OK]
# ...(略)
#
# 16186% doG library/debian
# "6.0.10"
# "7.9"
# "experimental"
# "rc-buggy"
# "stable"
# "stable-backports"
# "stretch"
# "testing"
# "unstable"
# "wheezy-backports"
# 16187% doG google/debian
# "wheezy"
#
doG() {
    # apt-get install jq
    curl -s -S "https://registry.hub.docker.com/v2/repositories/$@/tags/" | jq '."results"[]["name"]' |sort
}

# }}}

# task {{{
alias pu="python $TODO_DIR/opt/punch/Punch.py"
alias td="todo.sh"
alias tda="todo.sh add"
alias tdr="todo.sh del"
alias tdR="todo.sh replace"
alias td0="todo.sh prepend"
alias td\$="todo.sh append"
alias tdg="todo.sh ls"
alias tdl="todo.sh lsdo"
alias tdgc="todo.sh archive"
alias tdG="todo.sh listall"
alias tdp="todo.sh pri"
alias tdP="todo.sh depri"
alias tdO="todo.sh listnotes 2>/dev/null"
alias tdn="pu what"
alias td1="(${TODO_DIR}/opt/pomodoro/pomodoro.sh '' 1 &)"
alias td2="(${TODO_DIR}/opt/pomodoro/pomodoro.sh '' 2 &)"
tdc() {
    if [[ ${ARGC} > 1 ]]; then # 追加注释
        td$ ${1} "/* ${(@)argv[2,$#]} */" > /dev/null 2>&1
    fi
}
tde() {
    if [ -z ${1} ]; then
        loc=":normal M"
    else
        loc=":normal $1gg"
    fi
    HOME_FILE="$TODO_DIR/var/home/todo.log"
    WORK_FILE="$TODO_DIR/var/work/todo.log"
    vi +":e $HOME_FILE" +":normal zz" \
        +":vs $WORK_FILE" +"${loc}"
}
tdo() {
    DESC=$(sed -n "${1}p" ${TODO_FILE})
    if echo ${DESC} | egrep -qi 'message-id:'; then
        MAIL=`echo ${DESC} | sed -e 's/.*message-id:[ ]\?<\([^@]*@[^ ]*\)>.*/\1/gi'`
        ${TODO_DIR}/opt/mutt/muttjump "${MAIL}"
    elif echo ${DESC} | egrep -qi 'note:'; then
        NOTE=`echo ${DESC} | sed -e 's/.*note:\([^ ]*\).*/\1/g'`
        td notesedit ${NOTE} 2> /dev/null
    fi
}
tds() { # 开始一项工作
    if [ -n ${1} ]; then
        echo ${1} > ${TODO_DIR}/var/latest.tid
    fi # 如果没给参数，代表继续最近一次的任务
    TDID=$(cat ${TODO_DIR}/var/latest.tid)
    TODO=$(sed -n "${TDID}p" ${TODO_FILE})

    if [ "x"${2} != "x" ]; then # 如果有第二参数，表示持续多个蕃茄钟
        TURN=$((${2}+0))
    else
        TURN=1
    fi

    td start ${TDID} > /dev/null 2>&1

    # 避免Message-ID被记录
    TODO=${TODO/ Message-ID:*>/}
    # 跳过Todotxt的日期字段，如果存在的话
    TODO=${${TODO}/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] /}

    PROJ=$(echo $TODO | awk '{ patsplit($0, a, "\\+[a-z][a-zA-Z0-9]+"); print a[1] }')
    if [ -z $PROJ ]; then
        PROJ="+wip"
    fi

    DESC=$(echo $TODO | sed "s/$PROJ//g" | sed "s/^ //" | sed "s/ $//")
    # 避免感叹号「!」引起 Shell 的不良反应
    DESC=${${DESC}/!/b}
    # Todotxt 格式的 +Project 格式化为 Toggl 格式的 @Project
    PROJ=${${PROJ}/+/@}

    # $TODO_DIR/opt/toggl/toggl.py start "${DESC}" ":lifespace" "${PROJ}"

    # 如果上一个工作周期还没结束，譬如前一项工作在周期内完成了，
    # 那么等这个工作闹钟自己结束，避免一个新工作闹钟被重复添加。
    if ! pgrep "pomodoro.sh" > /dev/null 2>&1; then
        (${TODO_DIR}/opt/pomodoro/pomodoro.sh ${TDID} ${TURN} &) # 放到后台
    fi
}
tdd() { # 完成一项工作
    BEEN=$(cat ${TODO_DIR}/var/latest.tid)
    if [[ ${ARGC} == 0 ]]; then # 如果没给参数，表示当前正在进行的任务被打断 [D]isturb
        td bump ${BEEN} > /dev/null 2>&1
        pkill pomodoro.sh
    else # 否则标记由第一个参数代表的任务已完成，但并不结束番茄钟
        TDID=${1}
        td do ${TDID} > /dev/null 2>&1

        # `tds A` and then `tdd B`, cause task A be stopped.
        if [[ ${TDID} == ${BEEN} ]]; then # 停止在线计时
            # $TODO_DIR/opt/toggl/toggl.py stop
        fi

        if [[ ${ARGC} > 1 ]]; then # 完成时允许添加简短的注释
            td comment ${TDID} "${(@)argv[2,$#]}" > /dev/null 2>&1
        fi
    fi
}
tdy() { # 过去完成一项工作
    if [ -z ${2} ]; then # 如果没给参数，代表昨天完成
        WHEN="yesterday"
    else
        WHEN=${2/da/days ago}
    fi
    td did ${1} "${WHEN}"
}
# }}}

# archive {{{
tgz() {
    name=`echo $1 | sed 's/\/*$//g'`
    tar -zcf "$name.tgz" $@
}
tgzz() {
    name=`echo $1 | sed 's/\/*$//g'`
    tar -zcf "$name.tgz" $@ --exclude=.cscope --exclude-vcs
}
tgx() {
    $__SUDO tar -zxvf $@
}
tgg() {
    tar -tf $@
}

tjz() {
    name=`echo $1 | sed 's/\/*$//g'`
    tar -jcf "$name.tbz" $@
}
tjzz() {
    name=`echo $1 | sed 's/\/*$//g'`
    tar -jcf "$name.tbz" $@ --exclude=.cscope --exclude-vcs
}
tjx() {
    $__SUDO tar -jxvf $@
}
tjg() {
    tar -tf $@
}
# }}}

# file {{{
alias -s png=c_png
alias -s PNG=c_png
alias -s gif=c_gif
alias -s GIF=c_gif
alias -s jpg=c_jpg
alias -s JPG=c_jpg
alias -s bmp="pqiv -i"
alias -s BMP="pqiv -i"
alias -s xpm="pqiv -i"
alias -s XPM="pqiv -i"
alias -s jpeg=c_jpg
alias -s JPEG=c_jpg
alias -s icon="pqiv -i"
alias -s ICON="pqiv -i"

alias -s doc=c_doc
alias -s xls=c_xls
alias -s pdf="zathura"
alias -s html=c_htm

# 查看图片、同时复制到剪贴板
c_png() { pqiv -i "$1" && copyq write image/png - < "$1" && copyq select 0 }
c_jpg() { pqiv -i "$1" && copyq write image/jpg - < "$1" && copyq select 0 }
c_gif() { pqiv -i "$1" && copyq write image/gif - < "$1" && copyq select 0 }
c_doc() { antiword $1 | less }
c_xls() { xlhtml $1 | w3m -T text/html }
c_pdf() { pdftotext -q $1 - | less }
c_htm() { w3m -T text/html $1 }
# }}}

# md5sum {{{
g256() {
    md5sum $* | gpg --digest-algo sha256 --clearsign
}

ghash() {
    echo -n $* | shasum | /bin/grep -Eo '[a-f].{4}' | head -1
}

D() {
    src=$(echo $* | sed 's/\s*->\s*/->/' | /bin/grep -Po '^((?!->).)*')
    dst=$(echo $* | sed 's/\s*->\s*/->/' | /bin/grep -Po '(?<=->).*$')

    src_ip=${src%%:*}
    dst_ip=${dst%%:*}

    src_path=${src#*:}
    dst_path=${dst#*:}

    src_clsync="$src_path"
    dst_clsync="user@$dst_ip::$(ghash $dst_path)"

    echo "$(ghash $src_clsync)-$(ghash $dst_clsync)" | grep -o '.*'
}

# }}}

# fzf {{{
all() {
    local all raw
    all=/sun/worktop/ansible/inventory/all
    on=$(/bin/grep -f =(ansible -u root 'all:!off' --list-hosts | awk '{print $1}') $all | sed 's/\(.*\)\s.*=\(.*\)/\1 \2/')
    echo $on | fzf -0 -1 --preview-window=hidden
}
# }}}

